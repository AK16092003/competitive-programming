<snippet>
	<content><![CDATA[

#define maxsz 200005
vi visited(maxsz);
vi comp(maxsz , 0);
vi adjlst[maxsz];
vi adjrev[maxsz];
vi order;
vi component;


void dfs(int u)
{
	visited[u] = 1;
	for(int v : adjlst[u])
	{
		if(!visited[v])
		{
			dfs(v);
		}
	}
	order.pb(u);
}


void dfsr(int u)
{
	component.pb(u);
	visited[u] = 1;
	for(int v : adjrev[u])
	{
		if(!visited[v])
		{
			dfsr(v);
		}
	}
}

	


void solve(){

	int n , m;
	cin >> n >> m;

	for(int i = 0 ; i < m ; i ++)
	{
		int a , b;
		cin >> a >> b;

		adjlst[a].pb(b);
		adjrev[b].pb(a);
	}

	for(int i = 1 ; i <= n ; i ++)
	{
		if(!visited[i])
		{
			dfs(i);
		}
	}

	reverse(order.begin(), order.end());

	for(int i = 0 ; i <= n ; i ++) visited[i] = 0;

	int sz = 0;
	for(int u:  order)
	{
		if(!visited[u])
		{
			sz++;
			component.clear();
			dfsr(u);

			for(int u : component)
			{
				comp[u] = sz;
			}
		}
	}

	cout << sz << endl;
	for(int i = 1 ; i <= n ; i ++)
	{
		cout << comp[i] << " ";
	}
	cout << endl;
}


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>scc</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
